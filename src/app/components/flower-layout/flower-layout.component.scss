@import "../../../variables";

$positionsByNumber: (
  // It's important that flowers be listed from smallest y-position to largest
  // y-position. (That ensures that when flower images overlap, the ones at the
  // top of the hill appear in back.)
  16: (
    42.5% 18%,
    20% 22%,
    65% 22%,
    54% 24%,
    77% 25%,
    32% 27%,
    8% 30%,
    90% 30%,
    40% 45%,
    62% 47%,
    74% 48%,
    30% 51%,
    19% 45%,
    8% 53%,
    50% 55%,
    88% 53%,
  ),
  8: (
    //42.5% 18%,
    //20% 22%,
    //65% 22%,
    54% 24%,
    77% 25%,
    32% 27%,
    8% 30%,
    //90% 30%,
    40% 45%,
    62% 47%,
    //74% 48%,
    //30% 51%,
    19% 45%,
    //8% 53%,
    //50% 55%,
    88% 53%,
  )
);

@mixin positionFlowers($positions) {
  @for $i from 1 through length($positions) {
    $pair: nth($positions, $i);
    .flower-item:nth-child(#{$i}) {
      left: nth($pair, 1);
      top: nth($pair, 2);
    }
  }
}

/**
 * Create classes like `.flowers-8` and `.flowers-16` with rules for how
 * to position flowers
 */
@each $numFlowers, $positions in $positionsByNumber {
  .flowers-#{$numFlowers} {
    @include positionFlowers($positions)
  }
}

.flowers {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: block;

  .flower-item {
    position: absolute;
    transform: translate(-50%, -50%);

    app-flower-layout-item {
      //display: block;
    }

    .marker-number {
      position: absolute;
      left: 25%;
      bottom: 0;
      background-color: white;
      border-radius: 50%;
      min-width: 22px;
      height: 22px;
      text-align: center;
      line-height: 22px;

      font-weight: 600;
      font-size: 12px;
      transform: translate(-50%, 0);
    }
  }
}


:host {
  display: block;
  //width: 100%;
  position: relative;
  overflow: hidden;
  contain: layout;
}


